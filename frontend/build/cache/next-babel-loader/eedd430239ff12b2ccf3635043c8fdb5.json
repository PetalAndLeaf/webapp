{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/jianruan/Developer/webapp/frontend/components/InputField.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport { styles } from '../styles/theme';\nimport { Typography } from '@material-ui/core';\nconst Root = styled.div.withConfig({\n  displayName: \"InputField__Root\",\n  componentId: \"sc-4uuvp5-0\"\n})([\"margin-bottom:16px;\"]);\nconst Input = styled.input.withConfig({\n  displayName: \"InputField__Input\",\n  componentId: \"sc-4uuvp5-1\"\n})([\"height:48px;background-color:#fff;border-radius:4px;border:1px solid \", \";outline:none;padding-left:16px;padding-right:16px;color:\", \";font-family:\", \";font-size:14px;display:block;margin-bottom:4px;width:100%;&:focus{border:1px solid \", \";}\"], styles.palette.grey[300], styles.palette.text.primary, styles.typography.fontFamily, styles.palette.primary.main);\nconst Select = styled.select.withConfig({\n  displayName: \"InputField__Select\",\n  componentId: \"sc-4uuvp5-2\"\n})([\"height:48px;background-color:#fff;border-radius:4px;border:1px solid \", \";outline:none;padding-left:16px;padding-right:16px;color:\", \";font-family:\", \";font-size:14px;display:block;margin-bottom:4px;width:100%;&:focus{border:1px solid \", \";}\"], styles.palette.grey[300], styles.palette.text.primary, styles.typography.fontFamily, styles.palette.primary.main);\nexport default function InputField({\n  onChange,\n  value = '',\n  placeholder = '',\n  style,\n  name,\n  onBlur,\n  label,\n  error = '',\n  optional,\n  type = '',\n  options,\n  moreProps\n}) {\n  return __jsx(Root, _extends({\n    style: style\n  }, moreProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), label && __jsx(Typography, {\n    variant: \"h6\",\n    style: {\n      textTransform: 'uppercase'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, label, optional && __jsx(\"span\", {\n    style: {\n      color: styles.palette.grey[400]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"\\xA0 Optional\")), type === 'select' ? __jsx(Select, {\n    onChange: onChange,\n    value: value,\n    onBlur: onBlur,\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, options && __jsx(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), options && options.map((option, i) => {\n    return __jsx(\"option\", {\n      key: option + i,\n      value: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, option);\n  })) : __jsx(Input, {\n    onChange: onChange,\n    value: value,\n    placeholder: placeholder,\n    onBlur: onBlur,\n    name: name,\n    type: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), error !== '' && __jsx(Typography, {\n    variant: \"caption\",\n    color: \"error\",\n    style: {\n      display: 'block'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, error));\n}","map":{"version":3,"sources":["/Users/jianruan/Developer/webapp/frontend/components/InputField.tsx"],"names":["React","styled","styles","Typography","Root","div","Input","input","palette","grey","text","primary","typography","fontFamily","main","Select","select","InputField","onChange","value","placeholder","style","name","onBlur","label","error","optional","type","options","moreProps","textTransform","color","map","option","i","display"],"mappings":"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","sourcesContent":["import React, { ChangeEvent } from 'react'\nimport styled from 'styled-components'\nimport { styles } from '../styles/theme'\nimport { Typography } from '@material-ui/core'\n\nconst Root = styled.div`\n  margin-bottom: 16px;\n`\nconst Input = styled.input`\n  height: 48px;\n  background-color: #fff;\n  border-radius: 4px;\n  border: 1px solid ${styles.palette.grey[300]};\n  outline: none;\n  padding-left: 16px;\n  padding-right: 16px;\n  color: ${styles.palette.text.primary};\n  font-family: ${styles.typography.fontFamily};\n  font-size: 14px;\n  display: block;\n  margin-bottom: 4px;\n  width: 100%;\n\n  &:focus {\n    border: 1px solid ${styles.palette.primary.main};\n  }\n`\nconst Select = styled.select`\n  height: 48px;\n  background-color: #fff;\n  border-radius: 4px;\n  border: 1px solid ${styles.palette.grey[300]};\n  outline: none;\n  padding-left: 16px;\n  padding-right: 16px;\n  color: ${styles.palette.text.primary};\n  font-family: ${styles.typography.fontFamily};\n  font-size: 14px;\n  display: block;\n  margin-bottom: 4px;\n  width: 100%;\n\n  &:focus {\n    border: 1px solid ${styles.palette.primary.main};\n  }\n`\n\ninterface propsValue {\n  onChange?: (event: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => void\n  onBlur?: (event: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => void\n  value?: string\n  placeholder?: string\n  style?: any\n  name?: string\n  label?: string\n  error?: string\n  optional?: boolean\n  type?: string\n  options?: string[]\n  moreProps?: any\n}\n\nexport default function InputField({\n  onChange,\n  value = '',\n  placeholder = '',\n  style,\n  name,\n  onBlur,\n  label,\n  error = '',\n  optional,\n  type = '',\n  options,\n  moreProps\n}: propsValue) {\n  return (\n    <Root style={style} {...moreProps}>\n      {label && (\n        <Typography variant=\"h6\" style={{ textTransform: 'uppercase' }}>\n          {label}\n          {optional && (\n            <span style={{ color: styles.palette.grey[400] }}>\n              &nbsp; Optional\n            </span>\n          )}\n        </Typography>\n      )}\n      {type === 'select' ? (\n        <Select onChange={onChange} value={value} onBlur={onBlur} name={name}>\n          {options && <option></option>}\n          {options &&\n            options.map((option, i) => {\n              return (\n                <option key={option + i} value={option}>\n                  {option}\n                </option>\n              )\n            })}\n        </Select>\n      ) : (\n        <Input\n          onChange={onChange}\n          value={value}\n          placeholder={placeholder}\n          onBlur={onBlur}\n          name={name}\n          type={type}\n        ></Input>\n      )}\n\n      {error !== '' && (\n        <Typography\n          variant=\"caption\"\n          color=\"error\"\n          style={{ display: 'block' }}\n        >\n          {error}\n        </Typography>\n      )}\n    </Root>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}