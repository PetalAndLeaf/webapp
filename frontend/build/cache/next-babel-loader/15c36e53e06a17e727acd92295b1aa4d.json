{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { TOGGLE_FLYOUT, TOGGLE_SIDEBAR, CLOSE_SIDEBAR, OPEN_FLYOUT, CLOSE_FLYOUT, SET_FLYOUT_TIMEOUT, CLEAR_FLYOUT_TIMEOUT, UPDATE_QUANTITY, SET_QUANTITY } from './type';\nvar initial = {\n  isFlyoutOpen: false,\n  isSidebarOpen: false,\n  flyoutTimeout: undefined,\n  items: [// {\n    //   sku: 'rc30',\n    //   name: 'Rose cake',\n    //   size: '30g, 6 counts',\n    //   quantity: 2,\n    //   price: 15\n    // },\n    // {\n    //   sku: 'rc50',\n    //   name: 'Rose cake',\n    //   size: '50g, 6 counts',\n    //   quantity: 1,\n    //   price: 18\n    // }\n  ],\n  productFlyout: undefined\n}; //TODO: replace with real data\n\nvar productData = {\n  rc30: {\n    name: 'Rose cake',\n    size: '30g, 6 counts',\n    price: 15\n  },\n  rc50: {\n    name: 'Rose cake',\n    size: '50g, 6 counts',\n    price: 18\n  }\n};\nexport function cartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TOGGLE_FLYOUT:\n      {\n        return _objectSpread({}, state, {\n          isFlyoutOpen: !state.isFlyoutOpen\n        });\n      }\n\n    case TOGGLE_SIDEBAR:\n      {\n        return _objectSpread({}, state, {\n          isSidebarOpen: !state.isSidebarOpen\n        });\n      }\n\n    case CLOSE_SIDEBAR:\n      {\n        return _objectSpread({}, state, {\n          isSidebarOpen: false\n        });\n      }\n\n    case OPEN_FLYOUT:\n      {\n        return _objectSpread({}, state, {\n          productFlyout: action.product\n        });\n      }\n\n    case CLOSE_FLYOUT:\n      {\n        return _objectSpread({}, state, {\n          productFlyout: undefined\n        });\n      }\n\n    case SET_FLYOUT_TIMEOUT:\n      {\n        return _objectSpread({}, state, {\n          flyoutTimeout: action.timeout\n        });\n      }\n\n    case CLEAR_FLYOUT_TIMEOUT:\n      {\n        if (state.flyoutTimeout !== undefined) {\n          clearTimeout(state.flyoutTimeout);\n        }\n\n        return _objectSpread({}, state, {\n          flyoutTimeout: undefined\n        });\n      }\n\n    case SET_QUANTITY:\n      {\n        var itemID = action.itemID;\n        var quantity = action.quantity;\n        var items = state.items;\n        var result = items.slice();\n        items.forEach(function (item, i) {\n          //find item by id\n          if (item.sku === itemID) {\n            //if quanity is 0, its REMOVE behavior\n            if (quantity === 0) {\n              result.splice(i, 1);\n            } else if (quantity > 0) {\n              //if quanity is posi tive integer, set quantity to the number\n              var updatedItem = _objectSpread({}, item, {\n                quantity: quantity\n              });\n\n              result[i] = updatedItem;\n            } else {} //if quanity is negative, ingnore\n            //end looping\n\n\n            return;\n          }\n        });\n        return _objectSpread({}, state, {\n          items: result\n        });\n      }\n\n    case UPDATE_QUANTITY:\n      {\n        var _itemID = action.itemID;\n        var delta = action.delta;\n        var _items = state.items;\n\n        var _result = _items.slice();\n\n        var index = -1;\n\n        _items.forEach(function (item, i) {\n          //find the item by ID\n          if (item.sku === _itemID) {\n            index = i; //if quantity will be <0, remove from array\n\n            if (delta + item.quantity <= 0) {\n              _result.splice(i, 1);\n            } else {\n              //otherwise, change quantity accordingly\n              var updatedItem = _objectSpread({}, item, {\n                quantity: item.quantity + delta\n              });\n\n              _result[i] = updatedItem;\n            }\n\n            return;\n          }\n        }); //if item not exist in array\n        //create and move to head of the array\n\n\n        if (index === -1 && delta > 0) {\n          var item = _objectSpread({}, productData[_itemID], {\n            sku: _itemID,\n            quantity: delta\n          });\n\n          _result.unshift(item);\n        }\n\n        return _objectSpread({}, state, {\n          items: _result\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/jianruan/Developer/webapp/frontend/store/cart/reducer.tsx"],"names":["TOGGLE_FLYOUT","TOGGLE_SIDEBAR","CLOSE_SIDEBAR","OPEN_FLYOUT","CLOSE_FLYOUT","SET_FLYOUT_TIMEOUT","CLEAR_FLYOUT_TIMEOUT","UPDATE_QUANTITY","SET_QUANTITY","initial","isFlyoutOpen","isSidebarOpen","flyoutTimeout","undefined","items","productFlyout","productData","rc30","name","size","price","rc50","cartReducer","state","action","type","product","timeout","clearTimeout","itemID","quantity","result","slice","forEach","item","i","sku","splice","updatedItem","delta","index","unshift"],"mappings":"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","sourcesContent":["import {\n  TOGGLE_FLYOUT,\n  TOGGLE_SIDEBAR,\n  CLOSE_SIDEBAR,\n  cartState,\n  cartActionTypes,\n  OPEN_FLYOUT,\n  CLOSE_FLYOUT,\n  SET_FLYOUT_TIMEOUT,\n  CLEAR_FLYOUT_TIMEOUT,\n  UPDATE_QUANTITY,\n  SET_QUANTITY\n} from './type'\n\nconst initial: cartState = {\n  isFlyoutOpen: false,\n  isSidebarOpen: false,\n  flyoutTimeout: undefined,\n  items: [\n    // {\n    //   sku: 'rc30',\n    //   name: 'Rose cake',\n    //   size: '30g, 6 counts',\n    //   quantity: 2,\n    //   price: 15\n    // },\n    // {\n    //   sku: 'rc50',\n    //   name: 'Rose cake',\n    //   size: '50g, 6 counts',\n    //   quantity: 1,\n    //   price: 18\n    // }\n  ],\n  productFlyout: undefined\n}\n\n//TODO: replace with real data\nconst productData: { [s: string]: any } = {\n  rc30: {\n    name: 'Rose cake',\n    size: '30g, 6 counts',\n    price: 15\n  },\n  rc50: {\n    name: 'Rose cake',\n    size: '50g, 6 counts',\n    price: 18\n  }\n}\nexport function cartReducer(\n  state = initial,\n  action: cartActionTypes\n): cartState {\n  switch (action.type) {\n    case TOGGLE_FLYOUT: {\n      return {\n        ...state,\n        isFlyoutOpen: !state.isFlyoutOpen\n      }\n    }\n    case TOGGLE_SIDEBAR: {\n      return {\n        ...state,\n        isSidebarOpen: !state.isSidebarOpen\n      }\n    }\n    case CLOSE_SIDEBAR: {\n      return {\n        ...state,\n        isSidebarOpen: false\n      }\n    }\n    case OPEN_FLYOUT: {\n      return {\n        ...state,\n        productFlyout: action.product\n      }\n    }\n    case CLOSE_FLYOUT: {\n      return {\n        ...state,\n        productFlyout: undefined\n      }\n    }\n    case SET_FLYOUT_TIMEOUT: {\n      return {\n        ...state,\n        flyoutTimeout: action.timeout\n      }\n    }\n    case CLEAR_FLYOUT_TIMEOUT: {\n      if (state.flyoutTimeout !== undefined) {\n        clearTimeout(state.flyoutTimeout)\n      }\n      return {\n        ...state,\n        flyoutTimeout: undefined\n      }\n    }\n\n    case SET_QUANTITY: {\n      const itemID = action.itemID\n      const quantity = action.quantity\n      const items = state.items\n      const result = items.slice()\n\n      items.forEach((item, i) => {\n        //find item by id\n        if (item.sku === itemID) {\n          //if quanity is 0, its REMOVE behavior\n          if (quantity === 0) {\n            result.splice(i, 1)\n          } else if (quantity > 0) {\n            //if quanity is posi tive integer, set quantity to the number\n            const updatedItem = { ...item, quantity: quantity }\n            result[i] = updatedItem\n          } else {\n            //if quanity is negative, ingnore\n          }\n          //end looping\n          return\n        }\n      })\n\n      return {\n        ...state,\n        items: result\n      }\n    }\n\n    case UPDATE_QUANTITY: {\n      const itemID = action.itemID\n      const delta = action.delta\n      const items = state.items\n      const result = items.slice()\n      let index = -1\n      items.forEach((item, i) => {\n        //find the item by ID\n        if (item.sku === itemID) {\n          index = i\n          //if quantity will be <0, remove from array\n          if (delta + item.quantity <= 0) {\n            result.splice(i, 1)\n          } else {\n            //otherwise, change quantity accordingly\n            const updatedItem = { ...item, quantity: item.quantity + delta }\n            result[i] = updatedItem\n          }\n          return\n        }\n      })\n      //if item not exist in array\n      //create and move to head of the array\n      if (index === -1 && delta > 0) {\n        const item = {\n          ...productData[itemID],\n          sku: itemID,\n          quantity: delta\n        }\n        result.unshift(item)\n      }\n      return {\n        ...state,\n        items: result\n      }\n    }\n\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}