{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { LOGIN_SUCCESS, LOGIN_FAIL, LOGIN_REQUEST, SIGN_OUT, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAIL } from './type';\nimport { signInWithEmailAndPassword, signOut, signUpWithEmailAndPassword } from '../../lib/auth';\nimport { createUserProfile } from '../../lib/db';\nexport function LogInAction(email, password) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: LOGIN_REQUEST\n                });\n                _context.prev = 1;\n                _context.next = 4;\n                return signInWithEmailAndPassword(email, password);\n\n              case 4:\n                dispatch({\n                  type: LOGIN_SUCCESS\n                });\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                console.log('login fail: ', _context.t0.code);\n                dispatch({\n                  type: LOGIN_FAIL,\n                  err: _context.t0.code\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\nexport function SignOutAction() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                try {\n                  signOut();\n                  dispatch({\n                    type: SIGN_OUT\n                  });\n                } catch (err) {\n                  console.log('singout fail: ', err.code);\n                }\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n}\nexport function SignUpAction(email, password) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var res, userInfo;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                dispatch({\n                  type: SIGN_UP_REQUEST\n                });\n                _context3.prev = 1;\n                _context3.next = 4;\n                return signUpWithEmailAndPassword(email, password);\n\n              case 4:\n                res = _context3.sent;\n                //extract uid from auth res && also make sure it's success before proceed\n                userInfo = {\n                  uid: res.user.uid,\n                  email: email\n                };\n                _context3.next = 8;\n                return createUserProfile(userInfo);\n\n              case 8:\n                dispatch({\n                  type: SIGN_UP_SUCCESS\n                });\n                _context3.next = 16;\n                break;\n\n              case 11:\n                _context3.prev = 11;\n                _context3.t0 = _context3[\"catch\"](1);\n                console.log(_context3.t0);\n                console.log('sign up fail: ', _context3.t0.code);\n                dispatch({\n                  type: SIGN_UP_FAIL,\n                  err: _context3.t0.code\n                });\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 11]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n}","map":{"version":3,"sources":["/Users/jianruan/Developer/webapp/frontend/store/user/action.tsx"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","LOGIN_REQUEST","SIGN_OUT","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAIL","signInWithEmailAndPassword","signOut","signUpWithEmailAndPassword","createUserProfile","LogInAction","email","password","dispatch","type","console","log","code","err","SignOutAction","SignUpAction","res","userInfo","uid","user"],"mappings":";;AAEA,SACEA,aADF,EAEEC,UAFF,EAGEC,aAHF,EAIEC,QAJF,EAKEC,eALF,EAMEC,eANF,EAOEC,YAPF,QAQO,QARP;AASA,SACEC,0BADF,EAEEC,OAFF,EAGEC,0BAHF,QAIO,gBAJP;AAKA,SAASC,iBAAT,QAAkC,cAAlC;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAAoCC,QAApC,EAAmE;AACxE;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AACLA,gBAAAA,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAEb;AAAR,iBAAD,CAAR;AADK;AAAA;AAAA,uBAGGK,0BAA0B,CAACK,KAAD,EAAQC,QAAR,CAH7B;;AAAA;AAIHC,gBAAAA,QAAQ,CAAC;AACPC,kBAAAA,IAAI,EAAEf;AADC,iBAAD,CAAR;AAJG;AAAA;;AAAA;AAAA;AAAA;AAQHgB,gBAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,YAAIC,IAAhC;AACAJ,gBAAAA,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAEd,UAAR;AAAoBkB,kBAAAA,GAAG,EAAE,YAAID;AAA7B,iBAAD,CAAR;;AATG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYD;AAED,OAAO,SAASE,aAAT,GAAsC;AAC3C;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAON,QAAP;AAAA;AAAA;AAAA;AAAA;AACL,oBAAI;AACFN,kBAAAA,OAAO;AACPM,kBAAAA,QAAQ,CAAC;AAAEC,oBAAAA,IAAI,EAAEZ;AAAR,mBAAD,CAAR;AACD,iBAHD,CAGE,OAAOgB,GAAP,EAAY;AACZH,kBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BE,GAAG,CAACD,IAAlC;AACD;;AANI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQD;AAED,OAAO,SAASG,YAAT,CAAsBT,KAAtB,EAAqCC,QAArC,EAAoE;AACzE;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACLA,gBAAAA,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAEX;AAAR,iBAAD,CAAR;AADK;AAAA;AAAA,uBAIeK,0BAA0B,CAACG,KAAD,EAAQC,QAAR,CAJzC;;AAAA;AAIGS,gBAAAA,GAJH;AAKH;AACMC,gBAAAA,QANH,GAM0B;AAC3BC,kBAAAA,GAAG,EAAEF,GAAG,CAACG,IAAJ,CAASD,GADa;AAE3BZ,kBAAAA,KAAK,EAAEA;AAFoB,iBAN1B;AAAA;AAAA,uBAUGF,iBAAiB,CAACa,QAAD,CAVpB;;AAAA;AAWHT,gBAAAA,QAAQ,CAAC;AACPC,kBAAAA,IAAI,EAAEV;AADC,iBAAD,CAAR;AAXG;AAAA;;AAAA;AAAA;AAAA;AAeHW,gBAAAA,OAAO,CAACC,GAAR;AACAD,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,aAAIC,IAAlC;AACAJ,gBAAAA,QAAQ,CAAC;AAAEC,kBAAAA,IAAI,EAAET,YAAR;AAAsBa,kBAAAA,GAAG,EAAE,aAAID;AAA/B,iBAAD,CAAR;;AAjBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBD","sourcesContent":["import { Dispatch } from 'redux'\nimport { ThunkAction, SingUpForm } from '../../utils/types'\nimport {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGIN_REQUEST,\n  SIGN_OUT,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_FAIL\n} from './type'\nimport {\n  signInWithEmailAndPassword,\n  signOut,\n  signUpWithEmailAndPassword\n} from '../../lib/auth'\nimport { createUserProfile } from '../../lib/db'\n\nexport function LogInAction(email: string, password: string): ThunkAction {\n  return async (dispatch: Dispatch) => {\n    dispatch({ type: LOGIN_REQUEST })\n    try {\n      await signInWithEmailAndPassword(email, password)\n      dispatch({\n        type: LOGIN_SUCCESS\n      })\n    } catch (err) {\n      console.log('login fail: ', err.code)\n      dispatch({ type: LOGIN_FAIL, err: err.code })\n    }\n  }\n}\n\nexport function SignOutAction(): ThunkAction {\n  return async (dispatch: Dispatch) => {\n    try {\n      signOut()\n      dispatch({ type: SIGN_OUT })\n    } catch (err) {\n      console.log('singout fail: ', err.code)\n    }\n  }\n}\n\nexport function SignUpAction(email: string, password: string): ThunkAction {\n  return async (dispatch: Dispatch) => {\n    dispatch({ type: SIGN_UP_REQUEST })\n    try {\n      //sign up with email and password\n      const res = await signUpWithEmailAndPassword(email, password)\n      //extract uid from auth res && also make sure it's success before proceed\n      const userInfo: SingUpForm = {\n        uid: res.user.uid,\n        email: email\n      }\n      await createUserProfile(userInfo)\n      dispatch({\n        type: SIGN_UP_SUCCESS\n      })\n    } catch (err) {\n      console.log(err)\n      console.log('sign up fail: ', err.code)\n      dispatch({ type: SIGN_UP_FAIL, err: err.code })\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}