{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/jianruan/Developer/webapp/frontend/pages/account/profile.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Typography } from '@material-ui/core';\nimport AccountLayout from '../../layout/AccountLayout';\nimport styled from 'styled-components';\nimport InputField from '../../components/InputField';\nimport RoundedBtn from '../../components/Button/RoundedBtn';\nimport TextBtn from '../../components/Button/TextBtn';\nimport Router from 'next/router';\nvar Header = styled.div.withConfig({\n  displayName: \"profile__Header\",\n  componentId: \"sc-1suz3s5-0\"\n})([\"height:64px;min-height:64px;display:flex;align-items:center;margin-bottom:16px;\"]);\nexport default function Profile() {\n  var currentUser = useSelector(function (state) {\n    return state.user.currentUser;\n  });\n\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      pwd = _useState2[0],\n      setPwd = _useState2[1];\n\n  useEffect(function () {\n    if (currentUser) {\n      setEmail(currentUser.email);\n    }\n  }, []);\n  return __jsx(AccountLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Edit your account information\")), __jsx(InputField, {\n    label: \"Email\",\n    type: \"email\",\n    value: email,\n    placeholder: \"Email\",\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), __jsx(InputField, {\n    label: \"Password\",\n    value: pwd,\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: function onChange(e) {\n      return setPwd(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), __jsx(RoundedBtn, {\n    style: {\n      marginTop: 8,\n      marginRight: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Save\"), __jsx(TextBtn, {\n    style: {\n      marginTop: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Delete account\"));\n}\n\nProfile.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(ctx) {\n    var store, isServer, isLoggedin;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            store = ctx.store, isServer = ctx.isServer; // store.dispatch(closeSidebar())\n\n            isLoggedin = store.getState().user.isLoggedin;\n\n            if (!isLoggedin) {\n              if (isServer) {\n                ctx.res.writeHead(302, {\n                  Location: \"/\"\n                });\n                ctx.res.end();\n              } else {\n                Router.push('/');\n              }\n            }\n\n            return _context.abrupt(\"return\", {\n              isServer: isServer\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/jianruan/Developer/webapp/frontend/pages/account/profile.tsx"],"names":["React","useState","useEffect","useSelector","Typography","AccountLayout","styled","InputField","RoundedBtn","TextBtn","Router","Header","div","Profile","currentUser","state","user","email","setEmail","pwd","setPwd","e","target","value","marginTop","marginRight","getInitialProps","ctx","store","isServer","isLoggedin","getState","res","writeHead","Location","end","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Typography } from '@material-ui/core'\nimport AccountLayout from '../../layout/AccountLayout'\nimport styled from 'styled-components'\nimport InputField from '../../components/InputField'\nimport RoundedBtn from '../../components/Button/RoundedBtn'\nimport TextBtn from '../../components/Button/TextBtn'\nimport Router from 'next/router'\n\nconst Header = styled.div`\n  height: 64px;\n  min-height: 64px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 16px;\n`\nexport default function Profile() {\n  const currentUser = useSelector((state: any) => state.user.currentUser)\n  const [email, setEmail] = useState('')\n  const [pwd, setPwd] = useState('')\n\n  useEffect(() => {\n    if (currentUser) {\n      setEmail(currentUser.email)\n    }\n  }, [])\n\n  return (\n    <AccountLayout>\n      <Header>\n        <Typography variant=\"h4\">Edit your account information</Typography>\n      </Header>\n      <InputField\n        label=\"Email\"\n        type=\"email\"\n        value={email}\n        placeholder=\"Email\"\n        onChange={(e: any) => setEmail(e.target.value)}\n      />\n      <InputField\n        label=\"Password\"\n        value={pwd}\n        type=\"password\"\n        placeholder=\"Password\"\n        onChange={(e: any) => setPwd(e.target.value)}\n      />\n      <RoundedBtn style={{ marginTop: 8, marginRight: 16 }}>Save</RoundedBtn>\n      {\n        //TODO: Implement account deletion\n      }\n      <TextBtn style={{ marginTop: 8 }}>Delete account</TextBtn>\n    </AccountLayout>\n  )\n}\n\nProfile.getInitialProps = async function(ctx: any) {\n  const { store, isServer } = ctx\n  // store.dispatch(closeSidebar())\n  const { isLoggedin } = store.getState().user\n  if (!isLoggedin) {\n    if (isServer) {\n      ctx.res.writeHead(302, { Location: `/` })\n      ctx.res.end()\n    } else {\n      Router.push('/')\n    }\n  }\n  return {\n    isServer\n  }\n}\n"]},"metadata":{},"sourceType":"module"}